services:
  backend:
    build: ./backend
    ports:
      - "5001:5001"
    depends_on:
      - db
      - message_broker
    environment:
      MYSQL_HOST: db
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - backend-net
      - db-net

  db:
    image: mysql:latest
    environment:
      MYSQL_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

    volumes:
      - ./db/seed.sql:/docker-entrypoint-initdb.d/seed.sql
    networks:
      - db-net

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    networks:
      - frontend-net
      - backend-net
    environment:
      NODE_ENV: development

  cli_frontend:
    build: ./cli_frontend
    depends_on:
      - backend
    networks:
      - cli-frontend-net
      - backend-net
    tty: true

  message_broker:
    build: ./message_broker
    ports:
      - "5672:5672" # Default AMQP RabbitMQ port
      - "15672:15672" # Management UI port
    networks:
      - backend-net
      - db-net

  meetings_consumer:
    build: ./event_consumers/meetings_consumer
    depends_on:
      - message_broker
    networks:
      - backend-net

  attachments_consumer:
    build: ./event_consumers/attachments_consumer
    depends_on:
      - message_broker
    networks:
      - backend-net

  participants_consumer:
    build: ./event_consumers/participants_consumer
    depends_on:
      - message_broker
    networks:
      - backend-net

networks:
  cli-frontend-net:
    driver: bridge
  frontend-net:
    driver: bridge
  backend-net:
    driver: bridge
  db-net:
    driver: bridge
